trigger:
  branches:
    include:
      - master
      - release/*
      - feature/*

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: | #Install all dependencies using yarn
      yarn global add @angular/cli
      yarn global add lerna
      yarn bootstrap
      yarn sync-yarn-npm
      yarn run nx run-many --all --target=build
    displayName: 'yarn install and build Fouly'

  - task: CopyFiles@2
    inputs:
      sourceFolder: ./
      contents: 'package-lock.json'
      targetFolder: dist/apps/fouly/backend
      overWrite: true

  - script:
      | # Use npm instead of yarn to avoid hoisting for azure functions, we want everything under node_modules.
      npm install
    displayName: 'npm install for azure functions'
    workingDirectory: dist/apps/fouly/backend

  - task: CopyFiles@2
    displayName: 'Copy main.js'
    inputs:
      sourceFolder: dist/apps/fouly/backend
      Contents: |
        main.js
        main.js.map
      TargetFolder: dist/apps/fouly/backend/foulyApiGatewayHttpTrigger
      OverWrite: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'dist/apps/fouly/pwa'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/fouly-pwa.$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'dist/apps/fouly/backend'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/fouly-backend-azure-function.$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
