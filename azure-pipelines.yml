trigger:
  branches:
    include:
      - develop
      - release/*

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: | #Install all global dependencies using yarn
      yarn global add @angular/cli
      yarn global add lerna
      yarn bootstrap
      yarn sync-yarn-npm

    displayName: 'install global dependencies'

  - script: |
      yarn run nx run-many --projects=fouly-backend,fouly-pwa --target=build --configuration=production
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'heads/release'))
    displayName: 'Build production packages'

  - script: |
      yarn run nx run-many --projects=fouly-backend,fouly-pwa --target=build --configuration=staging
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'heads/develop'))
    displayName: 'Build staging packages'

  - task: CopyFiles@2
    inputs:
      sourceFolder: ./
      contents: 'package-lock.json'
      targetFolder: dist/apps/fouly/backend
      overWrite: true

  - script:
      | # Use npm instead of yarn to avoid hoisting for azure functions, we want everything under node_modules.
      npm install
    displayName: 'npm install for azure functions'
    workingDirectory: dist/apps/fouly/backend

  - task: CopyFiles@2
    displayName: 'Copy main.js'
    inputs:
      sourceFolder: dist/apps/fouly/backend
      Contents: |
        main.js
        main.js.map
      TargetFolder: dist/apps/fouly/backend/foulyApiGatewayHttpTrigger
      OverWrite: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'dist/apps/fouly/pwa'
      includeRootFolder: false
      archiveType: 'zip'

      archiveFile: '$(Build.ArtifactStagingDirectory)/fouly-pwa.zip'
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'dist/apps/fouly/backend'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/fouly-backend-azure-function.zip'
      replaceExistingArchive: true

  - task: UniversalPackages@0
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'heads/develop'))
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: '8f09215d-4571-4b5e-b7e3-7cc9aec53b51/fdf6fdf3-237b-4b42-9dba-2029bf24a1f7'
      vstsFeedPackagePublish: 'fouly'
      versionOption: 'patch'

  - task: UniversalPackages@0
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'heads/release'))
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: '8f09215d-4571-4b5e-b7e3-7cc9aec53b51/d38e1a80-fbb3-4554-b27f-29e39a29add6'
      vstsFeedPackagePublish: 'fouly'
      versionOption: 'patch'
